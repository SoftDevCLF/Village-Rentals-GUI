@page "/inventorygui"
@using VillageRentalsGUI.Data
@inject NavigationManager Nav

<h1>Inventory</h1>
<hr/>
<div class="d-flex gap-2 mb-3">
    <button class="btn btn-primary" @onclick='() => Nav.NavigateTo("/viewequipment")'>View Equipment</button>
    <button class="btn btn-secondary" @onclick='() => Nav.NavigateTo("/addequipment")'>Add New Equipment</button>
</div>

<form @onsubmit="Search">
    <div class="input-group mb-3 w-50">
        <input class="form-control" placeholder="Search by name..." @bind="searchTerm" />
        <button class="btn btn-primary" type="submit">Search</button>
    </div>
</form>

<div class="row">
    <div class="col-5 col-md-2">
        <p>Filter:</p>
        <div>
            <input type="radio" name="availability" value="all"
            checked="@IsAllSelected"
            @onchange="@(e => availability = "all")" />
            <label>Show All</label>
        </div>
        <div>
            <input type="radio" name="availability" value="available"
            checked="@IsAvailableSelected"
            @onchange="@(e => availability = "available")" />
            <label>By Availability</label>
        </div>
    </div>

    <div class="col-md-10 border-start">
        <p>Search Results</p>
        @if (filteredEquipment.Any())
        {
            <table class="table">
                <thead>
                    <tr>
                        <th class="text-primary border-secondary">ID</th>
                        <th class="text-primary border-secondary">Equipment Name</th>
                        <th class="text-primary border-secondary">Daily Rate</th>
                        <th class="text-primary border-secondary">Category</th>
                        <th class="text-primary border-secondary">Description</th>
                        <th class="text-primary border-secondary">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (Equipment item in filteredEquipment)
                    {
                        <tr>
                            <td>@item.EquipmentID</td>
                            <td>@item.EquipmentName</td>
                            <td>@item.DailyRentalCost.ToString("C")</td>
                            <td>@item.Category?.CategoryName</td>
                            <td>@item.EquipmentDescription</td>
                            <td>
                                <button class="btn btn-sm btn-primary me-2"
                                @onclick="() => GoToUpdatePage(item.EquipmentID)">
                                    Update
                                </button>
                                <button class="btn btn-sm btn-danger"
                                @onclick="() => Remove(item.EquipmentID)">
                                    Remove
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <p>No equipment found.</p>
        }
    </div>
</div>

@code {
    private List<Equipment> filteredEquipment = new();
    private string searchTerm = "";
    private string availability = "all";

    private bool IsAllSelected => availability == "all";
    private bool IsAvailableSelected => availability == "available";

    private void RefreshList() => Filter();

    private void Search() => Filter();

    private void Filter()
    {
        filteredEquipment = Equipment.AllEquipment
            .Where(e =>
                (string.IsNullOrWhiteSpace(searchTerm) || e.EquipmentName.Contains(searchTerm, StringComparison.OrdinalIgnoreCase)) &&
                (!IsAvailableSelected || e.DailyRentalCost > 0))
            .ToList();
    }

    private void Remove(int equipmentID)
    {
        InventoryManager.RemoveInventoryItem(equipmentID);
        DataLoader.SaveAll();
        Filter();
    }

    private void GoToUpdatePage(int equipmentID)
    {
        Nav.NavigateTo($"/updateequipment/{equipmentID}");
    }

    protected override void OnInitialized()
    {
        DataLoader.LoadAll(); // ✅ Ensure data is loaded from JSON
        Filter();             // Now the list will not be empty
    }

}
